{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","itemWidth","images","frameSize","animationDuration","step","visibleImages","stepImages","imagesWidth","imagenWidthVisble","useState","transform","setTransform","className","style","width","transition","map","element","i","height","src","alt","type","disabled","onClick","steps","carouselMovementBack","stepImg","carouselMovementForward","App","setItemWidth","setFrameSize","setStep","setAnimationDuration","length","htmlFor","id","placeholder","onChange","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"mMA0FeA,EA/EmB,SAAC,GAM5B,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,KAEMC,EAAgBL,EAAYE,EAC5BI,EAAaN,EAAYI,EACzBG,EAA0B,GAAZP,EACdQ,EAAoBD,EAAcF,EACxC,EAAkCI,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAyBA,OACE,sBAAKC,UAAU,YAAf,UACE,qBACEA,UAAU,WACVC,MAAO,CACLC,MAAM,GAAD,OAAKT,EAAL,OAHT,SAME,oBACEO,UAAU,iBACVC,MAAO,CACLH,UAAU,eAAD,OAAiBA,EAAjB,OACTK,WAAW,aAAD,OAAeZ,EAAf,mBAJd,SAOGF,EAAOe,KAAI,SAACC,EAASC,GAAV,OACV,oBAAkBL,MAAO,CAAEM,OAAQnB,GAAnC,SACE,qBAAKoB,IAAG,UAAKH,GAAWI,IAAG,UAAKH,EAAI,GAAKJ,MAAOd,KADzCiB,UAMf,sBAAKL,UAAU,mBAAf,UACE,wBACEU,KAAK,SACLC,SAAwB,IAAdb,EACVc,QAAS,kBArCY,WAC3B,IAAMC,EAAQf,EAAYJ,EAIxBK,EAHW,GAEDc,EACGA,EAHF,GAmCQC,IAHjB,kBAOA,wBACE,UAAQ,OACRJ,KAAK,SACLC,SAAWb,EAAYL,IAAmBE,EAC1CiB,QAAS,kBAzDe,WAC9B,IAEMG,EAAUrB,EAAaI,EAG3BC,EADEH,GAAqBmB,EACVA,EALEnB,EAAoBE,EACTA,GAuDPkB,IAJjB,yBCTOC,EAhEH,WACV,IAAM5B,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGF,EAAkCQ,mBAAS,KAA3C,mBAAOT,EAAP,KAAkB8B,EAAlB,KACA,EAAkCrB,mBAAS,GAA3C,mBAAOP,EAAP,KAAkB6B,EAAlB,KACA,EAAwBtB,mBAAS,GAAjC,mBAAOL,EAAP,KAAa4B,EAAb,KACA,EAAkDvB,mBAAS,KAA3D,mBAAON,EAAP,KAA0B8B,EAA1B,KAEA,OACE,sBAAKrB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCX,EAAOiC,OAA1C,aACA,uBAAOC,QAAQ,SAAf,mBACA,uBACEb,KAAK,OACLc,GAAG,SACHC,YAAW,UAAKrC,GAChBsC,SAAU,SAACC,GAAD,OAAWT,GAAcS,EAAMC,OAAOC,UAElD,uBAAON,QAAQ,UAAf,wBACA,uBACEb,KAAK,OACLc,GAAG,UACHC,YAAW,UAAKnC,GAChBoC,SAAU,SAACC,GAAD,OAAWR,GAAcQ,EAAMC,OAAOC,UAElD,uBAAON,QAAQ,SAAf,kBACA,uBACEb,KAAK,OACLc,GAAG,SACHC,YAAW,UAAKjC,GAChBkC,SAAU,SAACC,GAAD,OAAWP,GAASO,EAAMC,OAAOC,UAE7C,uBAAON,QAAQ,sBAAf,gCACA,uBACEb,KAAK,OACLc,GAAG,sBACHC,YAAW,UAAKlC,GAChBmC,SAAU,SAACC,GAAD,OAAWN,GAAsBM,EAAMC,OAAOC,UAG1D,cAAC,EAAD,CACExC,OAAQA,EACRG,KAAMA,EACNF,UAAWA,EACXF,UAAWA,EACXG,kBAAmBA,QC1D3BuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.19b1e6fd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  itemWidth: number;\n  images: string[];\n  frameSize: number;\n  animationDuration: number;\n  step: number;\n}\n\nconst Carousel: React.FC<Props> = ({\n  itemWidth,\n  images,\n  frameSize,\n  animationDuration,\n  step,\n}) => {\n  const visibleImages = itemWidth * frameSize;\n  const stepImages = itemWidth * step;\n  const imagesWidth = itemWidth * 10;\n  const imagenWidthVisble = imagesWidth - visibleImages;\n  const [transform, setTransform] = useState(0);\n\n  const carouselMovementForward = () => {\n    const goodStep = imagenWidthVisble - transform;\n    const stepElse = goodStep + transform;\n    const stepImg = stepImages + transform;\n\n    if (imagenWidthVisble >= stepImg) {\n      setTransform(stepImg);\n    } else {\n      setTransform(stepElse);\n    }\n  };\n\n  const carouselMovementBack = () => {\n    const steps = transform - stepImages;\n    const zero = 0;\n\n    if (zero <= steps) {\n      setTransform(steps);\n    } else {\n      setTransform(zero);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${visibleImages}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(-${transform}px)`,\n            transition: `transform ${animationDuration}ms ease-in-out`,\n          }}\n        >\n          {images.map((element, i) => (\n            <li key={element} style={{ height: itemWidth }}>\n              <img src={`${element}`} alt={`${i + 1}`} width={itemWidth} />\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"container-button\">\n        <button\n          type=\"button\"\n          disabled={transform === 0}\n          onClick={() => carouselMovementBack()}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          disabled={(transform + visibleImages) === imagesWidth}\n          onClick={() => carouselMovementForward()}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst App = () => {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n      <label htmlFor=\"itemId\">width</label>\n      <input\n        type=\"text\"\n        id=\"itemId\"\n        placeholder={`${itemWidth}`}\n        onChange={(event) => setItemWidth(+event.target.value)}\n      />\n      <label htmlFor=\"frameId\">frame size</label>\n      <input\n        type=\"text\"\n        id=\"frameId\"\n        placeholder={`${frameSize}`}\n        onChange={(event) => setFrameSize(+event.target.value)}\n      />\n      <label htmlFor=\"stepId\">step</label>\n      <input\n        type=\"text\"\n        id=\"stepId\"\n        placeholder={`${step}`}\n        onChange={(event) => setStep(+event.target.value)}\n      />\n      <label htmlFor=\"idAnimationDuration\">animation duration</label>\n      <input\n        type=\"text\"\n        id=\"idAnimationDuration\"\n        placeholder={`${animationDuration}`}\n        onChange={(event) => setAnimationDuration(+event.target.value)}\n      />\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        // infinite={false}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}